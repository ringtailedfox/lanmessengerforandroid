Option 2: CLI Flags with --build=...

This version parses multiple --build= flags:

#!/bin/bash

for arg in "$@"; do
  if [[ $arg == --build=* ]]; then
    TARGET="${arg#--build=}"
    ARCH=$(echo $TARGET | cut -d'-' -f1)
    OS=$(echo $TARGET | cut -d'-' -f2)
    VERSION=$(echo $TARGET | cut -d'-' -f3)

    echo "Building for: $ARCH / $OS / $VERSION"

    # You could map this to Qt paths, NDK versions, etc.
    # Example: call a function like build_target "$ARCH" "$OS" "$VERSION"
  fi
done


This lets you run:

./build_matrix.sh --build=armv7-android-4.0 --build=arm64-v8a-android-13 --build=x86-linux-ubuntu22


Bonus: ABI + Qt Path Mapping

You could maintain a map like:

case "$ARCH" in
  armv7) QT_PATH="/home/user/Qt/6.5.2/android_armv7" ;;
  arm64-v8a) QT_PATH="/home/user/Qt/6.9.2/android_arm64_v8a" ;;
  x86) QT_PATH="/home/user/Qt/6.5.2/android_x86" ;;
  x86_64) QT_PATH="/home/user/Qt/6.5.2/android_x86_64" ;;
esac

